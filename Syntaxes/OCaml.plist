<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>ml</string>
		<string>mli</string>
		<string>mll</string>
		<string>mly</string>
	</array>
	<key>foldingStartMarker</key>
	<string>\b(struct|sig|object)\b|\(\*\*</string>
	<key>foldingStopMarker</key>
	<string>\bend\b|\*\*\)</string>
	<key>highlightPairs</key>
	<array>
		<array>
			<string>(</string>
			<string>)</string>
		</array>
		<array>
			<string>[</string>
			<string>]</string>
		</array>
		<array>
			<string>{</string>
			<string>}</string>
		</array>
	</array>
	<key>name</key>
	<string>OCaml Source</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.language.ocaml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.function.ocaml</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>keyword.language.ocaml</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(let(?:\s+rec)?+|and)\s+([a-z_][a-zA-Z0-9'_]*)((?:\s*(?:\(\s*\)|\s+(?:(?:(?:[a-z][a-zA-Z0-9'_]*)|(?:\(+\s*[a-z][a-zA-Z0-9'_]*(?:\s*:\s*[a-z][a-zA-Z0-9'_]*)?\s*\)+))|~[a-z][a-zA-Z0-9'_]*:(?:(?:[a-z][a-zA-Z0-9'_]*)|(?:\(+\s*[a-z][a-zA-Z0-9'_]*(?:\s*:\s*[a-z][a-zA-Z0-9'_]*)?\s*\)+))|\?(?:(?:(?:[a-z][a-zA-Z0-9'_]*)|(?:\(+\s*[a-z][a-zA-Z0-9'_]*(?:\s*:\s*[a-z][a-zA-Z0-9'_]*)?\s*\)+))|(?:\(+\s*[a-z][a-zA-Z0-9'_]*(?:\s*:\s*[a-z][a-zA-Z0-9'_]*)?\s*=\s*\w+\s*\)+)))))+|.*=\s*(fun(ction)?))</string>
			<key>name</key>
			<string>meta.function</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.language.ocaml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.language.ocaml</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>variable.method.ocaml</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(method)\s+(virtual\s+)?([a-z_][a-zA-Z0-9'_]*)((?:\s(?:[a-z_][a-zA-Z0-9'_]*))*)</string>
			<key>name</key>
			<string>meta.method</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.language.ocaml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^[ \t]*(type)\s+((?:(?:\(?\s*'[A-Za-z][a-zA-Z0-9_]*\s*\)?)|(?:\(\s*'[A-Za-z][a-zA-Z0-9_]*(?:\s*,\s*'[A-Za-z][a-zA-Z0-9_]*)*\s*\))\s+)?[a-z_][a-zA-Z0-9'_]*)</string>
			<key>name</key>
			<string>meta.type</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.language.ocaml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.class</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^[ \t]*(class)(?:\s+(?!(?:virtual|type)\s+))((?:\[\s*'[A-Za-z][a-zA-Z0-9_]*(?:\s*,\s*'[A-Za-z][a-zA-Z0-9_]*)*\s*\]\s+)?[a-z_][a-zA-Z0-9'_]*)</string>
			<key>name</key>
			<string>meta.class</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.language.ocaml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.class.virtual</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^[ \t]*(class\s+virtual\s+)((?:\[\s*'[A-Za-z][a-zA-Z0-9_]*(?:\s*,\s*'[A-Za-z][a-zA-Z0-9_]*)*\s*\]\s+)?[a-z_][a-zA-Z0-9'_]*)</string>
			<key>name</key>
			<string>meta.class.virtual</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.language.ocaml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^[ \t]*(class\s+type\s+)((?:\[\s*'[A-Za-z][a-zA-Z0-9_]*(?:\s*,\s*'[A-Za-z][a-zA-Z0-9_]*)*\s*\]\s+)?[a-z_][a-zA-Z0-9'_]*)</string>
			<key>name</key>
			<string>meta.class.type</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>\(\*</string>
			<key>end</key>
			<string>\*\)</string>
			<key>name</key>
			<string>comment.block.ocaml</string>
			<key>swallow</key>
			<string>(\(\*.*\*\))+?</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>/\*</string>
			<key>end</key>
			<string>\*/</string>
			<key>name</key>
			<string>comment.block.ocamlyacc</string>
			<key>swallow</key>
			<string>(/\*.*\*/)+?</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b([A-Z][a-zA-Z0-9_]*)(?=(?:\.[a-zA-Z0-9_]+)+)</string>
			<key>name</key>
			<string>support.other.module</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.other.module</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\bopen\s+([A-Z][a-zA-Z0-9_]*(\.[A-Z][a-zA-Z0-9_]*)*)</string>
			<key>name</key>
			<string>keyword.module.open</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.exception</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\bexception\s+([A-Z][a-zA-Z0-9_]*)\b</string>
			<key>name</key>
			<string>keyword.exception</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(int|char|float|string|list|array|mutable|ref|bool|unit|exn|option|int32|int64|nativeint|format4|lazy_t|type)\b</string>
			<key>name</key>
			<string>keyword.type.storage</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\W`[A-Z][a-zA-Z0-9_]*\b</string>
			<key>name</key>
			<string>keyword.type.variant.polymorphic</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b[A-Z][a-zA-Z0-9_]*\b</string>
			<key>name</key>
			<string>keyword.type.variant</string>
		</dict>
		<dict>
			<key>match</key>
			<string>^[ \t]*#[a-zA-Z]+</string>
			<key>name</key>
			<string>keyword.directive</string>
		</dict>
		<dict>
			<key>match</key>
			<string>^[ \t]*#[0-9]*</string>
			<key>name</key>
			<string>keyword.directive.line-number</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b-?[0-9][0-9_]*((\.([0-9][0-9_]*([eE][+-]??[0-9][0-9_]*)?)?)|([eE][+-]??[0-9][0-9_]*))</string>
			<key>name</key>
			<string>constant.numeric.floating-point</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(-?((0(x|X)[0-9a-fA-F][0-9a-fA-F_]*)|(0(o|O)[0-7][0-7_]*)|(0(b|B)[01][01_]*)|([0-9][0-9_]*)))</string>
			<key>name</key>
			<string>constant.numeric.integer</string>
		</dict>
		<dict>
			<key>match</key>
			<string>'(\\x[a-fA-F0-9][a-fA-F0-9]|\\\d\d\d|.|\\[bnrt'"]|\\\\)'</string>
			<key>name</key>
			<string>constant.character</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?=[^\\])(")</string>
			<key>end</key>
			<string>"</string>
			<key>name</key>
			<string>string.double-quoted</string>
			<key>swallow</key>
			<string>\\.</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b_|!=|[#|,})(\]]|\.{1,2}|:[:=&gt;]??|;{1,2}?|&gt;[\]}]|\[[&lt;&gt;|]?|\{&lt;?|\|]</string>
			<key>name</key>
			<string>keyword.operator.symbol</string>
		</dict>
		<dict>
			<key>match</key>
			<string>[*+/-]\.</string>
			<key>name</key>
			<string>keyword.operator.symbol.infix.floating-point</string>
		</dict>
		<dict>
			<key>match</key>
			<string>~-\.</string>
			<key>name</key>
			<string>keyword.operator.symbol.prefix.floating-point</string>
		</dict>
		<dict>
			<key>match</key>
			<string>[=&lt;&gt;@^|&amp;+\-*/$%][!$%&amp;*+./:&lt;=&gt;?@^|~-]*</string>
			<key>name</key>
			<string>keyword.operator.symbol.infix</string>
		</dict>
		<dict>
			<key>match</key>
			<string>[!?~][!$%&amp;*+./:&lt;=&gt;?@^|~-]*</string>
			<key>name</key>
			<string>keyword.operator.symbol.prefix</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|false|for|fun|function|functor|if|in|include|inherit|initializer|land|lazy|let|lor|lsl|lsr|lxor|match|mod|module|mutable|new|object|of|open|or|private|rec|sig|struct|then|to|true|try|type|val|virtual|when|while|with)\b</string>
			<key>name</key>
			<string>keyword.language.ocaml</string>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.ocaml</string>
	<key>uuid</key>
	<string>F816FA69-6EE8-11D9-BF2D-000D93589AF6</string>
</dict>
</plist>
