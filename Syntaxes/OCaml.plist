<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>ml</string>
		<string>mli</string>
		<string>mll</string>
		<string>mly</string>
	</array>
	<key>foldingStartMarker</key>
	<string>\b(struct|sig|object)\b|\(\*\*</string>
	<key>foldingStopMarker</key>
	<string>\bend\b|\*\*\)</string>
	<key>name</key>
	<string>OCaml</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.ocaml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.ocaml</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(let|let\s+rec)?\s+([a-z][a-zA-Z0-9'_']*)\s+([a-z][a-zA-Z0-9'_']*)+</string>
			<key>name</key>
			<string>declaration.function.ocaml</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>\(\*</string>
			<key>end</key>
			<string>\*\)</string>
			<key>name</key>
			<string>comment.block.ocaml</string>
			<key>swallow</key>
			<string>(\(\*.*\*\))+?</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>/\*</string>
			<key>end</key>
			<string>\*/</string>
			<key>name</key>
			<string>comment.block.ocamlyacc</string>
			<key>swallow</key>
			<string>(/\*.*\*/)+?</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|false|for|fun|function|functor|if|in|include|inherit|initializer|land|lazy|let|lor|lsl|lsr|lxor|match|method|mod|module|mutable|new|object|of|open|or|private|rec|sig|struct|then|to|true|try|type|val|virtual|when|while|with)\b</string>
			<key>name</key>
			<string>keyword.control.ocaml</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b([A-Z][a-zA-Z0-9_]*\.)+</string>
			<key>name</key>
			<string>keyword.other.module.ocaml</string>
		</dict>
		<dict>
			<key>match</key>
			<string>open\s+([A-Z][a-zA-Z0-9_]*(\.[A-Z][a-zA-Z0-9_]*)*)</string>
			<key>name</key>
			<string>keyword.other.module.open.ocaml</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(int|char|float|string|list|array|mutable|ref|bool|unit|exn|option|int32|int64|nativeint|format4|lazy_t|type)\b</string>
			<key>name</key>
			<string>storage.type.ocaml</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b[A-Z][a-zA-Z0-9_]*\b</string>
			<key>name</key>
			<string>storage.type.other.variant.ocaml</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b`[A-Z][a-zA-Z0-9_]*\b</string>
			<key>name</key>
			<string>storage.type.other.variant.polymorphic.ocaml</string>
		</dict>
		<dict>
			<key>match</key>
			<string>^[ \t]*#[a-zA-Z]+</string>
			<key>name</key>
			<string>keyword.other.directive.ocaml</string>
		</dict>
		<dict>
			<key>match</key>
			<string>^[ \t]*#[0-9]*</string>
			<key>name</key>
			<string>keyword.other.directive.line-number.ocaml</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(-?(([0-9][0-9_]*)|(0(x|X)[0-9a-fA-F][0-9a-fA-F_]*)|(0(o|O)[0-7][0-7_]*)|(0(b|B)[01][01_]*)))\b</string>
			<key>name</key>
			<string>constant.numeric.integer.ocaml</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b-?[0-9][0-9_]*((\.([0-9][0-9_]*([eE][+-]??[0-9][0-9_]*)?)?)|([eE][+-]??[0-9][0-9_]*))</string>
			<key>name</key>
			<string>constant.numeric.floating-point.ocaml</string>
		</dict>
		<dict>
			<key>match</key>
			<string>'(\\x[a-fA-F0-9][a-fA-F0-9]|\\\d\d\d|.|\\[bnrt'"]|\\\\)'</string>
			<key>name</key>
			<string>constant.character.ocaml</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?=[^\\])(")</string>
			<key>end</key>
			<string>"</string>
			<key>name</key>
			<string>string.quoted.double.ocaml</string>
			<key>swallow</key>
			<string>\\.</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b_|!=|[#|,)(\]]|\.{1,2}?|:[:=&gt;]??|;{1,2}?|&gt;[\]}]|\[[&lt;&gt;|]?|\{&lt;?|\|]</string>
			<key>name</key>
			<string>keyword.operator.symbol.ocaml</string>
		</dict>
		<dict>
			<key>match</key>
			<string>[*+/-]\.</string>
			<key>name</key>
			<string>keyword.operator.symbol.infix.floating-point.ocaml</string>
		</dict>
		<dict>
			<key>match</key>
			<string>~-\.</string>
			<key>name</key>
			<string>keyword.operator.symbol.prefix.floating-point.ocaml</string>
		</dict>
		<dict>
			<key>match</key>
			<string>[=&lt;&gt;@^|&amp;+\-*/$%][!$%&amp;*+./:&lt;=&gt;?@^|~-]*</string>
			<key>name</key>
			<string>keyword.operator.symbol.infix.ocaml</string>
		</dict>
		<dict>
			<key>match</key>
			<string>[!?~][!$%&amp;*+./:&lt;=&gt;?@^|~-]*</string>
			<key>name</key>
			<string>keyword.operator.symbol.prefix.ocaml</string>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.ocaml</string>
	<key>uuid</key>
	<string>F816FA69-6EE8-11D9-BF2D-000D93589AF6</string>
</dict>
</plist>
