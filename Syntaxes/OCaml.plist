<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>ml</string>
		<string>mli</string>
		<string>mll</string>
		<string>mly</string>
	</array>
	<key>foldingStartMarker</key>
	<string>(\b(module|class)\s.*?=\s*$|\bbegin\s*$|\bwhile\s.*?\bdo\s*$|^let(?:\s+rec)?\s+[a-z_][a-zA-Z0-9_]*\s+(?!=)\S)</string>
	<key>foldingStopMarker</key>
	<string>(\bend;?|\bdone;?|^;;|^in)\s*$</string>
	<key>keyEquivalent</key>
	<string>^~O</string>
	<key>name</key>
	<string>OCaml</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.language.ocaml</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?&lt;=\{)\s*(\})</string>
			<key>name</key>
			<string>meta.empty-typing-pair.ocaml</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*(let(?:\s+rec)?|and)\s+([a-z_][a-zA-Z0-9_]*|\([^)]+\))(?=\s)((?=\s*=\s*(?=fun(?:ction)\b))|(?!\s*=))</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.language.ocaml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.ocaml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(=)|(=)\s*(?=fun(?:ction)\b)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.ocaml</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function.ocaml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#variables</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(type)\s+((?:(?:\(?\s*'[A-Za-z][a-zA-Z0-9_]*\s*\)?)|(?:\(\s*'[A-Za-z][a-zA-Z0-9_]*(?:\s*,\s*'[A-Za-z][a-zA-Z0-9_]*)*\s*\))\s+)?[a-z_][a-zA-Z0-9'_]*)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.language.ocaml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type.user-defined.ocaml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=\btype\b)|^\s*$</string>
			<key>name</key>
			<string>meta.type.ocaml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#typedefs</string>
				</dict>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^[ \t]*(class)(?:\s+(?!(?:virtual)\s+))((?:\[\s*'[A-Za-z][a-zA-Z0-9_]*(?:\s*,\s*'[A-Za-z][a-zA-Z0-9_]*)*\s*\]\s+)?[a-z_][a-zA-Z0-9'_]*)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.language.ocaml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class.type.ocaml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(=)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.language.ocaml</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.class.ocaml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#variables</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.language.ocaml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.type.ocaml</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^[ \t]*(class\s+type\s+)((?:\[\s*'[A-Za-z][a-zA-Z0-9_]*(?:\s*,\s*'[A-Za-z][a-zA-Z0-9_]*)*\s*\]\s+)?[a-z_][a-zA-Z0-9'_]*)</string>
			<key>name</key>
			<string>meta.class.type.ocaml</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(\bwith(?=\s*$)\b)|(\bfunction\b)|((?&lt;!\|)(\|)(?!\|)(?=.*-&gt;))</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.language.ocaml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.control.language.ocaml</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.other.language.ocaml</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>keyword.other.language.ocaml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?:(-&gt;)|\b(when)\b|\s(?=\|))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.language.ocaml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.language.ocaml</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.match.ocaml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#matchpatterns</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(^|\s+)(object)\s*(?:(\()[a-z]+(\)))?\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.language.ocaml</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.symbol.ocaml</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.symbol.ocaml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>^\1(end)(\s*;;)?\s*$</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.language.ocaml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.control.ocaml</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.object.ocaml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b(method)\s+(virtual\s+)?(private\s+)?([a-z_][a-zA-Z0-9'_]*)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.language.ocaml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.language.ocaml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.other.language.ocaml</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.ocaml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(=|:)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.ocaml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.method.ocaml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#variables</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.other.module.ocaml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>source.ocaml</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b((?:[A-Z][a-zA-Z0-9_]*)(?:\.[A-Z][a-zA-Z0-9_]+)*)(\.[a-zA-Z0-9'_]+)</string>
			<key>name</key>
			<string>meta.module.ocaml</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.ocaml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.other.module.ocaml</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(open)\s+([A-Z][a-zA-Z0-9_]*(\.[A-Z][a-zA-Z0-9_]*)*)</string>
			<key>name</key>
			<string>meta.module.open.ocaml</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.exception.ocaml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.exception.ocaml</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(exception)\s+([A-Z][a-zA-Z0-9_]*)\b</string>
			<key>name</key>
			<string>meta.exception.declaration.ocaml</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>\((?=[^~]?(\s|\w):(\s|\w))</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.ocaml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(:)([^:)]+)\)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.ocaml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type.ocaml</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.type-constraint.ocaml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(int|char|float|string|list|array|bool|unit|exn|option|int32|int64|nativeint|format4|lazy_t)\b</string>
			<key>name</key>
			<string>storage.type.ocaml</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(mutable|ref)\b</string>
			<key>name</key>
			<string>keyword.other.storage.modifier.ocaml</string>
		</dict>
		<dict>
			<key>match</key>
			<string>`[A-Z][a-zA-Z0-9_]*\b</string>
			<key>name</key>
			<string>entity.name.type.variant.polymorphic.ocaml</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b[A-Z][a-zA-Z0-9_]*\b</string>
			<key>name</key>
			<string>entity.name.type.variant.ocaml</string>
		</dict>
		<dict>
			<key>match</key>
			<string>^[ \t]*#[a-zA-Z]+</string>
			<key>name</key>
			<string>keyword.other.directive.ocaml</string>
		</dict>
		<dict>
			<key>match</key>
			<string>^[ \t]*#[0-9]*</string>
			<key>name</key>
			<string>keyword.other.directive.line-number.ocaml</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#strings</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#constants</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b_|!=|[#|,})(\]]|\.{1,2}|:[:=&gt;]??|;{1,2}?|&gt;[\]}]|\[[&lt;&gt;|]?|\{&lt;?|\|]</string>
			<key>name</key>
			<string>keyword.operator.symbol.ocaml</string>
		</dict>
		<dict>
			<key>match</key>
			<string>[*+/-]\.</string>
			<key>name</key>
			<string>keyword.operator.symbol.infix.floating-point.ocaml</string>
		</dict>
		<dict>
			<key>match</key>
			<string>~-\.</string>
			<key>name</key>
			<string>keyword.operator.symbol.prefix.floating-point.ocaml</string>
		</dict>
		<dict>
			<key>match</key>
			<string>[=&lt;&gt;@^|&amp;+\-*/$%][!$%&amp;*+./:&lt;=&gt;?@^|~-]*</string>
			<key>name</key>
			<string>keyword.operator.symbol.infix.ocaml</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.ocaml</string>
				</dict>
			</dict>
			<key>match</key>
			<string>~[a-z][a-z0-9]*(:)</string>
			<key>name</key>
			<string>entity.name.tag.label</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(and|land|lor|lsl|lsr|lxor|mod|or)\b</string>
			<key>name</key>
			<string>keyword.operator.language.ocaml</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(begin|do|done|downto|else|end|for|if|then|to|try|when|while)\b</string>
			<key>name</key>
			<string>keyword.control.language.ocaml</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(as|assert|class|constraint|exception|external|fun|functor|in|include|inherit|initializer|lazy|let|match|mod|module|mutable|new|object|open|private|rec|sig|struct|type|val|virtual|with)\b</string>
			<key>name</key>
			<string>keyword.other.language.ocaml</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(\*</string>
					<key>end</key>
					<string>\*\)</string>
					<key>name</key>
					<string>comment.block.ocaml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.ocamlyacc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=[^\\])(")</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>comment.block.string.quoted.double.ocaml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\.</string>
							<key>name</key>
							<string>comment.block.string.constant.character.escape.ocaml</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>constants</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.empty-typing-pair.ocaml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-typing-pair.ocaml</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?:\[\s*(\])|\(\s*(\)))</string>
					<key>name</key>
					<string>constant.language.pseudo-variable.ocaml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(true|false)\b</string>
					<key>name</key>
					<string>constant.language.boolean.ocaml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\s_\s</string>
					<key>name</key>
					<string>constant.language.unversal-match.ocaml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b-?[0-9][0-9_]*((\.([0-9][0-9_]*([eE][+-]??[0-9][0-9_]*)?)?)|([eE][+-]??[0-9][0-9_]*))</string>
					<key>name</key>
					<string>constant.numeric.floating-point.ocaml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(-?((0(x|X)[0-9a-fA-F][0-9a-fA-F_]*)|(0(o|O)[0-7][0-7_]*)|(0(b|B)[01][01_]*)|([0-9][0-9_]*)))</string>
					<key>name</key>
					<string>constant.numeric.integer.ocaml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>'(\\x[a-fA-F0-9][a-fA-F0-9]|\\\d\d\d|.|\\[bnrt'"]|\\\\)'</string>
					<key>name</key>
					<string>constant.character.ocaml</string>
				</dict>
			</array>
		</dict>
		<key>matchpatterns</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>_</string>
					<key>name</key>
					<string>constant.language.match-pattern.ocaml</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constants</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\[\||\|\]|\[|\]|;|::)</string>
					<key>name</key>
					<string>keyword.other.language.ocaml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\|(?=\s*\S)</string>
					<key>name</key>
					<string>keyword.other.language.ocaml</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variables</string>
				</dict>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=[^\\])(")</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double.ocaml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\.</string>
							<key>name</key>
							<string>constant.character.escape.ocaml</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>typedefs</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\bof\b</string>
					<key>name</key>
					<string>keyword.other.language.ocaml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(int|char|float|string|list|array|bool|unit|exn|option|int32|int64|nativeint|format4|lazy_t)\b</string>
					<key>name</key>
					<string>storage.type.ocaml</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\bmutable\s+)?\b([a-z_][a-zA-Z0-9_]*)\s*(:)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.storage.modifier.ocaml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>source.ocaml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.ocaml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(;|})</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.ocaml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.record.declaration.ocaml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#typedefs</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>\b[a-z_][a-zA-Z0-9_]*\b</string>
					<key>name</key>
					<string>storage.type.ocaml</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.other.module.ocaml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.module.ocaml</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b((?:[A-Z][a-zA-Z0-9_]*)(?:\.[A-Z][a-zA-Z0-9_]+)*)(\.[a-zA-Z0-9'_]+)</string>
					<key>name</key>
					<string>meta.module.type.ocaml</string>
				</dict>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>variables</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\(\)</string>
					<key>name</key>
					<string>variable.parameter.unit.ocaml</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constants</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\()(?=.*?[^:]:(?!=|:)&gt;?)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.ocaml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(:&gt;?)(.*?)(\))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.ocaml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.ocaml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.ocaml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>variable.parameter.type-constrained.ocaml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#matchpatterns</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#variables</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.ocaml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.ocaml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>variable.parameter.tuple.ocaml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#matchpatterns</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#variables</string>
						</dict>
						<dict>
							<key>match</key>
							<string>,</string>
							<key>name</key>
							<string>keyword.operator.ocaml</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\{)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.ocaml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\})</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.ocaml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>variable.parameter.record.ocaml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.name.tag.record.ocaml</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.ocaml</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>variable.parameter.record.ocaml</string>
								</dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.ocaml</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\s*([a-z][a-zA-Z0-9_]*)\s*(=)\s*([a-z][a-zA-Z0-9_]*)(;?)</string>
							<key>name</key>
							<string>meta.recordfield.ocaml</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\s*([a-z][a-zA-Z0-9_]*)\s*(=)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.name.tag.record.ocaml</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.ocaml</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=\})</string>
							<key>name</key>
							<string>meta.recordfield.match.ocaml</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#matchpatterns</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(~)([a-z][a-zA-Z0-9_]*)\s*(:)\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.named.parameter.ocaml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.name.ocaml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.ocaml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\s</string>
					<key>name</key>
					<string>variable.parameter.named.ocaml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#variables</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\s(\?)\(([a-z_][a-zA-Z0-9_]*)\s*(=)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.optional.parameter.ocaml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.name.ocaml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.ocaml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.ocaml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>variable.parameter.optional.ocaml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.named.parameter.ocaml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.parameter.ocaml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.ocaml</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(?:(~|\?)([a-z]+)(:))?([a-z_][a-zA-Z0-9_]*)</string>
					<key>name</key>
					<string>variable.parameter.ocaml</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.ocaml</string>
	<key>uuid</key>
	<string>F816FA69-6EE8-11D9-BF2D-000D93589AF6</string>
</dict>
</plist>
